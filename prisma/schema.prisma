// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  firstName   String
  lastName    String
  password    String
  avatarImage String?
  bookmarks   Bookmark[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}


model Bookmark {
  id      String @id @default(uuid())
  movieId String
  userId  String
  user    User   @relation(fields: [userId], references: [id])
  @@unique([ movieId, userId ])
}

model Screening {
  id    String   @id @unique @default(uuid())
  date  DateTime
  time  DateTime
  seats Seat[]
}

model Seat {
  name        SeatName
  id          String    @id @unique @default(uuid())
  screening   Screening @relation(fields: [screeningId], references: [id])
  screeningId String
  price       Float

  @@unique([name, screeningId])
}

enum SeatName {
  A1
  A2
  A3
  A4
  A5
  A6
  B1
  B2
  B3
  B4
  B5
  B6
  B7
  B8
  C1
  C2
  C3
  C4
  C5
  C6
  C7
  C8
  D1
  D2
  D3
  D4
  D5
  D6
  D7
  D8
  E1
  E2
  E3
  E4
  E5
  E6
  E7
  E8
  F1
  F2
  F3
  F4
  F5
  F6
}

model Screening {
  id          String   @id @default(uuid())
  date        String
  time        String
  bookedSeats String[]
  movieId     String
}
